#!/usr/bin/env python3
"""
–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Å retrieval –∏ –±–µ–∑ –Ω–µ–≥–æ
"""

import subprocess
import sys
import json
from pathlib import Path
from datetime import datetime

def update_config_retrieval(enabled):
    """–û–±–Ω–æ–≤–∏—Ç—å config.yaml –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è/–≤—ã–∫–ª—é—á–µ–Ω–∏—è retrieval"""
    import yaml
    with open("config.yaml", 'r') as f:
        config = yaml.safe_load(f)
    config['retrieval']['enabled'] = enabled
    with open("config.yaml", 'w') as f:
        yaml.dump(config, f, default_flow_style=False)

def run_evaluation(difficulty, retrieval_enabled, output_suffix):
    """–ó–∞–ø—É—Å—Ç–∏—Ç—å –æ—Ü–µ–Ω–∫—É"""
    update_config_retrieval(retrieval_enabled)
    
    timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
    output_file = f"evaluation_results/deepseek_{output_suffix}_{timestamp}.json"
    
    cmd = [
        sys.executable, "-m", "locobench.cli",
        "evaluate",
        "--model", "deepseek-ai/deepseek-coder-1.3b-instruct",
        "--task-category", "feature_implementation",
        "--difficulty", difficulty,
        "--output-file", output_file,
        "--no-resume"
    ]
    
    print(f"\nüöÄ {'–°' if retrieval_enabled else '–ë–ï–ó'} retrieval: {' '.join(cmd)}")
    
    result = subprocess.run(cmd, capture_output=True, text=True)
    
    if result.returncode == 0:
        print(f"‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã: {output_file}")
        return output_file
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞:\n{result.stderr}")
        return None

if __name__ == "__main__":
    try:
        import yaml
    except ImportError:
        print("‚ùå –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ PyYAML: pip install pyyaml")
        sys.exit(1)
    
    print("üî¨ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ DeepSeek —Å retrieval –∏ –±–µ–∑ –Ω–µ–≥–æ\n")
    
    # –ë–ï–ó retrieval (easy difficulty)
    file1 = run_evaluation("easy", False, "no_retrieval")
    
    # –° retrieval (hard difficulty)
    file2 = run_evaluation("hard", True, "with_retrieval")
    
    if file1 and file2:
        print("\n‚úÖ –û–±–∞ –∑–∞–ø—É—Å–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω—ã!")
        print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ë–ï–ó retrieval: {file1}")
        print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –° retrieval: {file2}")
    else:
        print("\n‚ö†Ô∏è –û–¥–∏–Ω –∏–ª–∏ –æ–±–∞ –∑–∞–ø—É—Å–∫–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∏—Å—å —Å –æ—à–∏–±–∫–æ–π")
